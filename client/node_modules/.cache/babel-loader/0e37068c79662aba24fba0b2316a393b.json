{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full stack application\\\\client\\\\src\\\\components\\\\Alert\\\\Alert.tsx\",\n    _s = $RefreshSig$();\n\n// Імпортуємо необхідні залежності з React та Redux\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions'; // Імпорт дії для закриття алерту\n\n// Імпорт інтерфейсу для стану алерту\nimport './styles.css'; // Імпорт стилів для компонента\n// Оголошуємо інтерфейс пропсів для компонента Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Оголошуємо функціональний компонент Alert, який приймає пропси\nexport const Alert = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const dispatch = useDispatch(); // Використовуємо хук useDispatch для отримання функції диспетчингу\n  // Функція для закриття алерту\n\n  const handleAlertClose = () => dispatch(hideAlert()); // Повертаємо JSX розмітку компонента Alert\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `alert alert-wrapper alert-${props.alertStatus}`,\n    children: [props.alertText, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAlertClose,\n      className: \"btn-close alert-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Alert, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["useDispatch","hideAlert","Alert","props","dispatch","handleAlertClose","alertStatus","alertText"],"sources":["C:/Full stack application/client/src/components/Alert/Alert.tsx"],"sourcesContent":["// Імпортуємо необхідні залежності з React та Redux\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions'; // Імпорт дії для закриття алерту\nimport { IAlertState } from '../../types/types'; // Імпорт інтерфейсу для стану алерту\nimport './styles.css' // Імпорт стилів для компонента\n\n// Оголошуємо інтерфейс пропсів для компонента Alert\ninterface IAlertProps {\n    props: IAlertState // Використовуємо інтерфейс IAlertState для опису пропсів\n}\n\n// Оголошуємо функціональний компонент Alert, який приймає пропси\nexport const Alert = ({ props }: IAlertProps) => {\n    const dispatch = useDispatch(); // Використовуємо хук useDispatch для отримання функції диспетчингу\n\n    // Функція для закриття алерту\n    const handleAlertClose = () => dispatch(hideAlert());\n\n    // Повертаємо JSX розмітку компонента Alert\n    return (\n        <div className={`alert alert-wrapper alert-${props.alertStatus}`}>\n            {props.alertText}\n            <button\n                onClick={handleAlertClose}\n                className='btn-close alert-btn'\n            />\n        </div>\n    );\n}"],"mappings":";;;AAAA;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B,C,CAAiD;;AACA;AACjD,OAAO,cAAP,C,CAAsB;AAEtB;;;AAKA;AACA,OAAO,MAAMC,KAAK,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC;EAAF,CAA2B;EAC7C,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAD6C,CACb;EAEhC;;EACA,MAAMK,gBAAgB,GAAG,MAAMD,QAAQ,CAACH,SAAS,EAAV,CAAvC,CAJ6C,CAM7C;;;EACA,oBACI;IAAK,SAAS,EAAG,6BAA4BE,KAAK,CAACG,WAAY,EAA/D;IAAA,WACKH,KAAK,CAACI,SADX,eAEI;MACI,OAAO,EAAEF,gBADb;MAEI,SAAS,EAAC;IAFd;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAhBM;;GAAMH,K;UACQF,W;;;KADRE,K"},"metadata":{},"sourceType":"module"}