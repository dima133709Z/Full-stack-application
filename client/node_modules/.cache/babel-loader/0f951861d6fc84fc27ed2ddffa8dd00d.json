{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full stack application\\\\client\\\\src\\\\components\\\\TodoList\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { completeTodo, deleteTodo, editTodo } from \"../../redux/actions\";\nimport { TodoItem } from \"../TodoItem/TodoItem\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  // Отримуємо дані зі стору за допомогою useSelector\n  const state = useSelector(state => state.todoReducer);\n  const dispatch = useDispatch(); // Функції для внесення змін у список завдань\n\n  const changeTodo = (title, done, id) => {\n    dispatch(editTodo(id, done, title)); // Диспатчимо дію для редагування завдання\n  };\n\n  const removeTodo = id => {\n    dispatch(deleteTodo(id)); // Диспатчимо дію для видалення завдання\n  };\n\n  const doneTodo = (id, done) => {\n    dispatch(completeTodo(id, done)); // Диспатчимо дію для позначення завдання як виконане\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    component: \"ul\",\n    className: \"list-group\",\n    children: state.todos.map(todo => /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 800,\n      classNames: 'todo',\n      children: /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        deleteTodo: removeTodo,\n        doneTodo: doneTodo,\n        changeTodo: changeTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useDispatch","useSelector","CSSTransition","TransitionGroup","completeTodo","deleteTodo","editTodo","TodoItem","TodoList","state","todoReducer","dispatch","changeTodo","title","done","id","removeTodo","doneTodo","todos","map","todo"],"sources":["C:/Full stack application/client/src/components/TodoList/TodoList.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { completeTodo, deleteTodo, editTodo } from \"../../redux/actions\";\nimport { ITodoReducer } from '../../types/types';\nimport { TodoItem } from \"../TodoItem/TodoItem\";\nimport './styles.css';\n\nexport const TodoList = () => {\n    // Отримуємо дані зі стору за допомогою useSelector\n    const state = useSelector((state: ITodoReducer) => state.todoReducer);\n    const dispatch = useDispatch();\n\n    // Функції для внесення змін у список завдань\n    const changeTodo = (title: string, done: boolean, id: string) => {\n        dispatch(editTodo(id, done, title)); // Диспатчимо дію для редагування завдання\n    }\n\n    const removeTodo = (id: string) => {\n        dispatch(deleteTodo(id)); // Диспатчимо дію для видалення завдання\n    }\n\n    const doneTodo = (id: string, done: boolean) => {\n        dispatch(completeTodo(id, done)); // Диспатчимо дію для позначення завдання як виконане\n    }\n\n    return (\n        <TransitionGroup component='ul' className='list-group'>\n            {/* Мапуємо кожне завдання зі стору */}\n            {state.todos.map(todo => (\n                <CSSTransition\n                    timeout={800}\n                    classNames={'todo'}\n                    key={todo.id}\n                >\n                    {/* Відображаємо компонент TodoItem для кожного завдання */}\n                    <TodoItem\n                        todo={todo}\n                        deleteTodo={removeTodo}\n                        doneTodo={doneTodo}\n                        changeTodo={changeTodo}\n                    />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAmD,qBAAnD;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,cAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC1B;EACA,MAAMC,KAAK,GAAGR,WAAW,CAAEQ,KAAD,IAAyBA,KAAK,CAACC,WAAhC,CAAzB;EACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAH0B,CAK1B;;EACA,MAAMY,UAAU,GAAG,CAACC,KAAD,EAAgBC,IAAhB,EAA+BC,EAA/B,KAA8C;IAC7DJ,QAAQ,CAACL,QAAQ,CAACS,EAAD,EAAKD,IAAL,EAAWD,KAAX,CAAT,CAAR,CAD6D,CACxB;EACxC,CAFD;;EAIA,MAAMG,UAAU,GAAID,EAAD,IAAgB;IAC/BJ,QAAQ,CAACN,UAAU,CAACU,EAAD,CAAX,CAAR,CAD+B,CACL;EAC7B,CAFD;;EAIA,MAAME,QAAQ,GAAG,CAACF,EAAD,EAAaD,IAAb,KAA+B;IAC5CH,QAAQ,CAACP,YAAY,CAACW,EAAD,EAAKD,IAAL,CAAb,CAAR,CAD4C,CACV;EACrC,CAFD;;EAIA,oBACI,QAAC,eAAD;IAAiB,SAAS,EAAC,IAA3B;IAAgC,SAAS,EAAC,YAA1C;IAAA,UAEKL,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACjB,QAAC,aAAD;MACI,OAAO,EAAE,GADb;MAEI,UAAU,EAAE,MAFhB;MAAA,uBAMI,QAAC,QAAD;QACI,IAAI,EAAEA,IADV;QAEI,UAAU,EAAEJ,UAFhB;QAGI,QAAQ,EAAEC,QAHd;QAII,UAAU,EAAEL;MAJhB;QAAA;QAAA;QAAA;MAAA;IANJ,GAGSQ,IAAI,CAACL,EAHd;MAAA;MAAA;MAAA;IAAA,QADH;EAFL;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CAtCM;;GAAMP,Q;UAEKP,W,EACGD,W;;;KAHRQ,Q"},"metadata":{},"sourceType":"module"}