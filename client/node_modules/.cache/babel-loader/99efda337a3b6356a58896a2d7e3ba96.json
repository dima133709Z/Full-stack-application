{"ast":null,"code":"import axios from 'axios';\nexport class TodoApi {\n  // Отримання списку справ з сервера\n  static async getTodos() {\n    const res = await axios.get('http://localhost:3000/todos');\n    return res.data;\n  } // Створення нової справи на сервері\n\n\n  static async createTodo(todo) {\n    const res = await axios.post('http://localhost:3000/todos', todo);\n    return res.data;\n  } // Видалення справи за її ідентифікатором\n\n\n  static async deleteTodo(id) {\n    await axios.delete(`http://localhost:3000/todos/${id}`);\n  } // Позначення справи як завершеної\n\n\n  static async completeTodo(todo) {\n    await axios.patch(`http://localhost:3000/todos/${todo.id}`, todo);\n  } // Редагування даних справи\n\n\n  static async editTodo(todo) {\n    const res = await axios.patch(`http://localhost:3000/todos/${todo.id}`, todo);\n    return res.data[1][0]; // Повертаємо оновлені дані справи\n  }\n\n}","map":{"version":3,"names":["axios","TodoApi","getTodos","res","get","data","createTodo","todo","post","deleteTodo","id","delete","completeTodo","patch","editTodo"],"sources":["C:/Full stack application/client/src/api/index.ts"],"sourcesContent":["import axios from 'axios';\nimport { ITodo, ITodoState } from '../types/types';\n\nexport class TodoApi {\n    // Отримання списку справ з сервера\n    static async getTodos(): Promise<ITodoState[]> {\n        const res = await axios.get('http://localhost:3000/todos');\n        return res.data;\n    }\n\n    // Створення нової справи на сервері\n    static async createTodo(todo: Partial<ITodo>): Promise<ITodoState[]> {\n        const res = await axios.post('http://localhost:3000/todos', todo);\n        return res.data;\n    }\n\n    // Видалення справи за її ідентифікатором\n    static async deleteTodo(id: string): Promise<void> {\n        await axios.delete(`http://localhost:3000/todos/${id}`);\n    }\n\n    // Позначення справи як завершеної\n    static async completeTodo(todo: Partial<ITodo>): Promise<void> {\n        await axios.patch(`http://localhost:3000/todos/${todo.id}`, todo);\n    }\n\n    // Редагування даних справи\n    static async editTodo(todo: Partial<ITodo>): Promise<ITodo> {\n        const res = await axios.patch(`http://localhost:3000/todos/${todo.id}`, todo);\n        return res.data[1][0]; // Повертаємо оновлені дані справи\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,OAAN,CAAc;EACjB;EACqB,aAARC,QAAQ,GAA0B;IAC3C,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,6BAAV,CAAlB;IACA,OAAOD,GAAG,CAACE,IAAX;EACH,CALgB,CAOjB;;;EACuB,aAAVC,UAAU,CAACC,IAAD,EAA8C;IACjE,MAAMJ,GAAG,GAAG,MAAMH,KAAK,CAACQ,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,CAAlB;IACA,OAAOJ,GAAG,CAACE,IAAX;EACH,CAXgB,CAajB;;;EACuB,aAAVI,UAAU,CAACC,EAAD,EAA4B;IAC/C,MAAMV,KAAK,CAACW,MAAN,CAAc,+BAA8BD,EAAG,EAA/C,CAAN;EACH,CAhBgB,CAkBjB;;;EACyB,aAAZE,YAAY,CAACL,IAAD,EAAsC;IAC3D,MAAMP,KAAK,CAACa,KAAN,CAAa,+BAA8BN,IAAI,CAACG,EAAG,EAAnD,EAAsDH,IAAtD,CAAN;EACH,CArBgB,CAuBjB;;;EACqB,aAARO,QAAQ,CAACP,IAAD,EAAuC;IACxD,MAAMJ,GAAG,GAAG,MAAMH,KAAK,CAACa,KAAN,CAAa,+BAA8BN,IAAI,CAACG,EAAG,EAAnD,EAAsDH,IAAtD,CAAlB;IACA,OAAOJ,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAP,CAFwD,CAEjC;EAC1B;;AA3BgB"},"metadata":{},"sourceType":"module"}